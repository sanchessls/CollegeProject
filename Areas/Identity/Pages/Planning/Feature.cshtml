@page
@model Feature

@{
    ViewData["Title"] = "Session: " + Model.SessionCode;
}

<div class="col-md-12 sessionHeader">
    @{
        <div class="col-md-12">

            <div class="row">

                    <div class="col-md-8 NoRowMargin">

                        @{
                            <h4 style="margin-left:5px;"> Session: @Model.DescriptionSession</h4>
                            if (Model.Linq != "")
                            {
                                <a class="h4" href="@Url.Content(Model.Linq)"  target="_blank"> @Model.Linq</a>
                            }

                        }
                    </div>

                    <div class="col-md-4">

                        @{
                            <h4 style="margin-left:5px;"> Code: @Model.SessionCode</h4>
                            <button class="btn btn-primary" onclick="window.location.href='@Url.Content("~/Identity/Planning/Session?code=" + Model.SessionCode)'"> Back to Session </button>
                        }
                    </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="row">
                @{
                    <h4 style="margin-left:5px;">Issue: @Model.FeatureIdentificator</h4>
                }
            </div> 
            <div class="row">
                @{
                    <h4 style="margin-left:5px;"> @Model.DescriptionFeature</h4>
                }
            </div>
        </div>

    }

    <div class="sessionHeader col-md-12">
        <div class="row">
            <div class="col-md-12">
                <div class="row" style="margin:5px;">
                    <div class="col-md-3">
                        <div id="card1" CardValue="1" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>1</span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div id="card2" CardValue="2" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>2</span>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div id="card3" CardValue="3" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>3</span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div id="card5" CardValue="5" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>5</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="margin:5px;">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-3">
                        <div id="card8" CardValue="8" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>8</span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div id="card16" CardValue="13" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>13</span>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div id="card32" CardValue="20" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>20</span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div id="card64" CardValue="40" class="scrum-card" onclick="updatePostID(this.id)">
                            <span>40</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>

        <div style="align-content:center;">

            <form method="post">
                @if (Model.TypeSelected == 0)
                {
                    <div asp-validation-summary="All" class="text-danger"></div>
                }
            <div class="form-group">
                @Html.HiddenFor(model => model.SelectedValue)
                @Html.HiddenFor(model => model.FeatureId)
                @Html.HiddenFor(model => model.PlanningSessionId)
                @Html.HiddenFor(model => model.DescriptionSession)
                @Html.HiddenFor(model => model.DescriptionFeature)
                @Html.HiddenFor(model => model.FeatureIdentificator)
                @Html.HiddenFor(model => model.UserCreator)
                @Html.HiddenFor(model => model.SessionCode)
                @Html.HiddenFor(model => model.TypeSelected)
                @Html.HiddenFor(model => model.MyOldVote)
                

                @if (Model.MyOldVote <= 0) 
                {
                <input type="submit" formaction="/Identity/Planning/Feature?id=@Model.FeatureId" value="Submit" class="btn btn-primary" />
                }
            </div>
            </form>
        </div>
    </div>
</div>

@if (Model.UserCreator || Model.User.Identity.Name == "sanchessls@gmail.com")
{
    <h4>Session options</h4>
    <hr class="separator">

    <div class="sessionHeader col-md-12">

        <div class="row">
            <div class="col-md-6">

                <form method="post" class="sessionHeaderIntern">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.SelectedValue)
                        @Html.HiddenFor(model => model.FeatureId)
                        @Html.HiddenFor(model => model.PlanningSessionId)
                        @Html.HiddenFor(model => model.DescriptionSession)
                        @Html.HiddenFor(model => model.DescriptionFeature)
                        @Html.HiddenFor(model => model.FeatureIdentificator)
                        @Html.HiddenFor(model => model.UserCreator)
                        @Html.HiddenFor(model => model.SessionCode)
                        @Html.HiddenFor(model => model.TypeSelected)
                        @Html.HiddenFor(model => model.MyOldVote)

                        @if (Model.TypeSelected == 1)
                        {
                            <div asp-validation-summary="All" class="text-danger"></div>
                        }

                        @if (Model.IsJiraCreated)
                        {
                    <input type="submit" formaction="/Identity/Planning/Feature?featureid=@Model.FeatureId&amp;sessionid=@Model.PlanningSessionId&amp;handler=CloseFeature" value="Close Issue" class="btn btn-primary" onclick="return confirm('Are you sure?')" />
                            @*<input type="submit" formaction="/Identity/Planning/CloseFeature?featureid=@Model.FeatureId" value="Close Issue" class="btn btn-primary" />*@
                        }
                        else
                        {
                            <input type="submit" formaction="/Identity/Planning/Feature?featureid=@Model.FeatureId&amp;sessionid=@Model.PlanningSessionId&amp;handler=CloseFeature" value="Close Issue" class="btn btn-primary" onclick="return confirm('Are you sure?')" />
                        }


                        <br>
                        <hr>
                        <br>
                        @if (Model.TypeSelected == 2)
                        {
                            <div asp-validation-summary="All" class="text-danger"></div>
                        }
                        <input type="submit" formaction="/Identity/Planning/Feature?featureid=@Model.FeatureId&amp;sessionid=@Model.PlanningSessionId&amp;handler=CancelFeature" value="Cancel Issue" class="btn btn-primary" onclick="return confirm('Are you sure?')" />
                    </div>
                </form>

            </div>
            <div class="col-md-6">
                <div id="grid" class="col-md-12 sessionHeader" />
            </div>
        </div>
    </div>
}
<div>
    <button class="btn btn-primary" onclick="window.location.href='@Url.Content("~/Identity/Planning/Session?code=" + Model.SessionCode)'"> Back to Session </button>
    
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/Feature.js"></script>


    <script type="text/javascript">

        "use strict";
        var connection = new signalR.HubConnectionBuilder().withUrl("/hubs/feature").build();
        connection.onclose(start);

        function checkSessionConnection() {
            console.log("checkSessionConnection");
            console.log(connection);

            if (connection != null) {
                console.log("NotNull");


                console.log("State : " + connection.connectionState);

            }
        }

        async function start() {
            console.log("SignalR Connected2aaaa.");
            try {
                await connection.start();
                console.log("SignalR Connected2.");
            } catch (err) {
                console.log(err);
                setTimeout(start, 5000);
            }
        };


        function checkFeatureConnection() {
            console.log("checkFeatureConnection");
            console.log(connection);
        }

        function EnterInGroupFeature(group) {
            console.log("EnterInGroupFeature");
            connection.start().then(function () {
                console.log("connection.start()");

                console.log("Inserting into SignalR Group : " + group);
                connection.invoke("JoinGroup", group).catch(err => console.error(err));
            }).catch(function (err) {
                return console.error(err.toString());
            });
        }

        connection.on("FeatureUpdated", function (FeatureId, Id) {
            console.log("FeatureUpdated");
            console.log("Feature ID : " + FeatureId);
            console.log("User ID : " + Id);

            CallFunctionFromJS();
        });


        checkFeatureConnection();

        EnterInGroupFeature("@Model.UserGroup");

        CallFunctionFromJS();

        clearCards();

        var valueVote = "card" + "@Model.MyOldVote";

        if (@Model.MyOldVote > 0) {

            var element = document.getElementById(valueVote);
            element.classList.add("cardSelectedOld");
            document.getElementById('SelectedValue').value = element.getAttribute("CardValue");
        }

        function updatePostID(val) {

            if (@Model.MyOldVote > 0) {
                return;
            }

            clearCards();

            var element = document.getElementById(val);
            element.classList.add("cardSelected");

            document.getElementById('SelectedValue').value = element.getAttribute("CardValue");

        }

        function clearCards() {
            var elements = document.getElementsByClassName("scrum-card");
            for (var i = 0; i < elements.length; i++) {
                elements[i].classList.remove("cardSelected");
                elements[i].classList.remove("cardSelectedOld");
            }
        }


        function CallFunctionFromJS() {
            //$('#grid').load('/Identity/Planning/UsersVotingPartial/Loading');
            $('#grid').load('/Identity/Planning/UsersVotingPartial/UsersVoting?sessionid=' +@Model.PlanningSessionId+'&featureid=' +@Model.FeatureId);
        }


    </script>

}